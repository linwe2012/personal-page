{"version":3,"sources":["spline/utils.ts","spline/splineAlgo.js","spline/splineRender.js","splineView.tsx","bits/pretty_title.tsx","bits/pristine_links.tsx","bits/svg_utils.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BeginingPrime","tau","p0","p1","p2","p0_prime","THREE","p1_prime","x","y","z","addVectors","clone","negate","multiplyScalar","Integration","mat","ua","ub","delta_x","elements","ax","ay","az","bx","by","bz","cx","cy","cz","A","B","C","D","E","nsplit","Math","floor","res","u","u2","u3","u4","sqrt","cnt","feed","console","log","tmp","Samplers","v","sin","PI","SplineLine","scene","themeColor","need_update","spline","newCurve","timeGoes","animateTime","curveUpdateDone","curveTau","newCurveTau","param","splineMatrial","color","linewidth","param_cache","param_is_displaying","paramDotsGroup","last_sample","last_sample_name","param_vectors","this","remove","PurgeParam","last_spline","c","splineMat","material","splineGeo","vertices","geometry","map","param_need_update","theme","val","k","i","length","MapColorToDiscrete","set","scale","lerp","inter","sub","add","verticesNeedUpdate","a","gran","at","id","position","d","push","step","first","vstep","base","j","InsertOne","p3","p4","mat3","mat1","mat2","multiplyMatrices","transpose","ComputeTransformMatrix","Compute","vec","applyMatrix4","comb","len","dots","numInterp","pointOnPlane","Sample","splineArr","last_vertex","cur","KickUpdateCurve","sample","begin","last","num","all","h","sum","sa","prox","epsilon","abs","s0","ua2","ua3","children","sample_name","arr","Paramterize","pointGeo","dotMaterial","dot","SplineGroup","canvas","camera","planeMesh","splines","mouse_down","positions","Float32Array","drawCount","dot_hovered","line","click_raycaster","hover_raycaster","spline_ctrl_needs_update","global_tau","global_gran","dotsGroup","show_param","param_sampler_fn","linear","param_sampler_name","listener","is_handling_drag","is_bifrost_animating","bifrost_save","setAttribute","onmousemove","e","MouseHoverOrDrag","onmousedown","onmouseup","UpdateSplineOnDotMoved","onclick","HandleClick","msg","event","setPickPosition","pickPosition","HandleDrag","setFromCamera","intersectedObjects","intersectObjects","setHex","obj","object","dotOnPlane","GetMouseOnPlane","userData","attributes","array","needsUpdate","point","intersectObject","bifrost","firstSpline","Append","setDrawRange","_NotifyListener","Destroy","UpdateCurve","newGran","DisplayNewCurve","newTau","bool","bifrost_splines","TestValidSplines","s","curBifrost","last_last_spline","b","undefined","ShowParam","HideParam","str","CanvasManager","frame","w","clearPickPosition","clientWidth","clientHeight","appendChild","mouseout","rect","getBoundingClientRect","clientX","left","clientY","top","pos","getCanvasRelativePosition","getContext","fn","Render","handle","el_id","renderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","document","getElementById","domElement","Aspect","defaultFlushColor","defaultFlushAlpha","setSize","setClearColor","glContext","planegeo","render","requestAnimationFrame","addEventListener","onFrameResize","aspect","updateProjectionMatrix","HandleTau","n","HandleGran","HandleImg","run_img","HandleImgSpeed","img_speed","EnableBifrost","HandleCleanLines","Clear","ShowLinearSample","showParam","GetAllImgs","imgs","SelectImg","selectImg","SelectSampler","param_sampler","SetFlushColor","flushColor","flushAlpha","SetListener","listen","RunAll","props","colorGroup","elId","getImg","theimg","imgSpeed","enable_param","selectSampler","cleanup","oncleanupDone","React","Component","SplineView","useState","img","whichImg","whichSampler","hint","setHint","nClicks","setNClicks","fontSize","colorText","setColorText","className","style","splineColor","PrettyTitle","titleStyle","titleUnderline","textDecoration","textColor","subtitleClass","lightBackground","titleClass","boxStyle","display","flexDirection","rawStyles","title","titleBoxClass","hideLeftRect","leftBoxClass","prefix","subtitle","background","PristineLinks","linkTextClassName","github","href","IntroEntry","letterSpacing","textAlign","centerTitle","justifyItems","justifyContent","text","Vector2","_x","_y","rhs","createConcanicalPolygonPath","size","radius","params","deg2rad","startAngle","startX","startY","center","r","halfAngle","cut_percentage","tan","cos","Array","path","angle","vertex","AB","BC","Q","QA","svgfmt","IntroIcon","propIcon","icon","message","link","Link","tooltip","Tooltip","aria-label","ReactGA","initialize","pageview","location","pathname","search","App","projectImageRefs","projectContentRefs","projectItemRefs","projectContentInner","refProjContentInner","instance","refProjIm","refProjContent","refProjItem","updateSize","projKey","im","innerContent","hIm","hContent","max","hItem","height","toString","useEffect","onload","useLayoutEffect","removeEventListener","introIconStyle","marginRight","gmailEl","setGmailEl","handleGmailClose","cmd","navigator","clipboard","writeText","open","rel","Grid","container","paddingLeft","paddingRight","alignItems","item","xs","md","viewBox","width","fill","patternUnits","sm","lg","Github","aria-controls","aria-haspopup","Gmail","onClick","currentTarget","cursor","Menu","anchorEl","keepMounted","Boolean","onClose","MenuItem","Cplusplus","Python","Javascript","Mathworks","Opengl","margin","marginBottom","justify","ref","onLoad","alt","bottom","src","backgroundColor","marginLeft","paddingTop","paddingBottom","right","lineHeight","fontWeight","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6e4b86a0.chunk.js","sourcesContent":["import * as THREE from 'three'\nexport function MapColorToDiscrete(val:number /* [0, 1] */) { // -> [100, 200, ..., 900]\n    const k = [0,  0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 2]\n    const v = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 900]\n    for(let i = 0; i < k.length; ++i) {\n        if(val < k[i+1]) {\n            return v[i]\n        }\n    }\n}\n\n// estimate curvature\nexport function BeginingPrime(tau:number, p0:THREE.Vector3, p1:THREE.Vector3, p2:THREE.Vector3) {\n    let p0_prime = new THREE.Vector3();\n    let p1_prime = new THREE.Vector3();\n\n    p0_prime.x = tau * (2*p1.x-p2.x-p0.x)\n    p0_prime.y = tau * (2*p1.y-p2.y-p0.y)\n    p0_prime.z = 0 // tau * (2*p1.z-p2.z-p0.z)\n\n    p1_prime.addVectors(p0.clone().negate(), p2).multiplyScalar(tau)\n    return [p0_prime, p1_prime]\n}\n\n\nexport function Integration(mat:THREE.Matrix3, ua:number, ub:number, delta_x:number) {\n    let p1 = mat.elements\n    \n    //let ax = p1[0]\n    //let bx = p1[1]\n    //let cx = p1[2]\n    //let ay = p1[4]\n    //let by = p1[5]\n    //let cy = p1[6]\n    //let az = p1[8]\n    //let bz = p1[9]\n    //let cz = p1[10]\n\n    let ax = p1[0]\n    let ay = p1[1]\n    let az = p1[2]\n    let bx = p1[4]\n    let by = p1[5]\n    let bz = p1[6]\n    let cx = p1[8]\n    let cy = p1[9]\n    let cz = p1[10]\n\n    let A = 9*(ax*ax+ay*ay+az*az)\n    let B = 12*(ax*bx+ay*by+az*bz)\n    let C = 6*(ax*cx+ay*cy+az*cz)+4*(bx*bx+by*by+bz*bz)\n    let D = 4*(bx*cx+by*cy+bz*cz)\n    let E = cx*cx+cy*cy+cz*cz\n\n    let nsplit = Math.floor((ub-ua)/delta_x)\n    let res = 0\n    if(nsplit < 3) {\n        for(let u = ua; u <= ub; u += delta_x) {\n            let u2 = u*u\n            let u3 = u2*u\n            let u4 = u2*u2\n            \n            let tmp = Math.sqrt(A*u4+B*u3+C*u2+D*u+E)\n            res += tmp\n        }\n        return res * delta_x\n    }\n    let cnt = 0\n    \n    for(let u = ua; u <= ub; u += delta_x) {\n        let u2 = u*u\n        let u3 = u2*u\n        let u4 = u2*u2\n        let feed = A*u4+B*u3+C*u2+D*u+E\n        if(feed < 0) {\n            console.log('hi')\n        }\n        let tmp = Math.sqrt(feed)\n        //let tmp = A*u4+B*u3+C*u2+D*u+E\n        if(cnt === 0) {\n            res += tmp * delta_x\n        }\n        else if(cnt === nsplit) {\n            res += tmp * delta_x\n        }\n        else if(cnt % 2 === 1) {\n            res += 4 * tmp * delta_x\n        }\n        else {\n            res += 2 * tmp * delta_x\n        }\n        ++cnt\n    }\n    return res / 3\n}\n\n\nexport function ComputeTransformMatrix(p1:THREE.Vector3, p2:THREE.Vector3, p3:THREE.Vector3, p4:THREE.Vector3) {\n    let mat1 = new THREE.Matrix4()\n    mat1.set(\n        2, -2, 1, 1,\n        -3, 3, -2, -1,\n        0, 0, 1, 0,\n        1, 0, 0, 0\n    )\n    let mat2 = new THREE.Matrix4()\n    mat2.set(\n        p1.x, p1.y, p1.z, 0,\n        p2.x, p2.y, p2.z, 0,\n        p3.x, p3.y, p3.z, 0,\n        p4.x, p4.y, p4.z, 0,\n    )\n    let mat3 = new THREE.Matrix4()\n    mat3.multiplyMatrices(mat1, mat2)\n    mat3.transpose()\n    return mat3\n}","import * as THREE from 'three'\n\nimport { MapColorToDiscrete, BeginingPrime, Integration, ComputeTransformMatrix } from './utils'\n//import { ImageManger } from './imageman'\n\n\n\nexport const Samplers = {\n    'linear': (v)=>v,\n    'ease in square': (v)=>v*v,\n    'ease in cubic': (v)=>v*v*v,\n    'ease in sine': (v)=> 1+Math.sin((v-1) * Math.PI / 2),\n    'ease out sine': (v)=> Math.sin(v * Math.PI / 2),\n    'ease in out sine': (v)=> (Math.sin((v-0.5)*Math.PI) + 1)/2\n}\n\n// const lineVertexShaderSrc = `\n// attribute vec3 center; varying vec3 vCenter; void main() { vCenter = center; gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 ); }\n// `\n\n// const lineFragmentShaderSrc = `\n// varying vec3 vCenter; uniform float lineWidth; \n//   float edgeFactorTri() { \n//   vec3 d = fwidth( vCenter.xyz ); \n//   vec3 a3 = smoothstep( vec3( 0.0 ), d * lineWidth, vCenter.xyz ); \n//   return min( min( a3.x, a3.y ), a3.z ); } \n// void main() {\n//   float factor = edgeFactorTri();\n//   if ( factor > 0.8 ) discard; // <===============\n//   gl_FragColor.rgb = mix( vec3(\n//   1.0 ), vec3( 0.2 ), factor); \n//   gl_FragColor.a = 1.0;\n// }\n// `\n// let lineVertexShader = null;\n// let lineFragmentShader = null;\n\n// const glShader = (gl, type, shaderSource) => {\n//     const shader = gl.createShader(type);\n//     gl.shaderSource(shader, shaderSource);\n//     gl.compileShader(shader);\n//     return shader\n// }\n\n\nexport const InitContext = (gl)=>{\n//     lineVertexShader = glShader(gl, gl.VERTEX_SHADER, lineVertexShaderSrc)\n//     lineFragmentShader = glShader(gl, gl.FRAGMENT_SHADER, lineFragmentShaderSrc)\n}\n\n\nexport class SplineLine {\n    need_update = false\n    spline = null\n    newCurve = null\n    timeGoes = 0\n    animateTime = 20\n    curveUpdateDone = null // callback when update is done\n    themeColor = null\n    curveTau = 0.5\n    newCurveTau = 0.5\n    param = []\n    splineMatrial = new THREE.LineBasicMaterial( { color: 0xcccccc, linewidth: 2.2 } );\n    //splineMatrial = new THREE.ShaderMaterial({\n    //    uniforms: {\n    //        lineWidth: {\n    //          value: 3\n    //        }\n    //    },\n    //    vertexShader: lineVertexShaderSrc,\n    //    fragmentShader: lineVertexShaderSrc,\n    //})\n    scene = null\n    param_cache = []\n    param_is_displaying = false\n    paramDotsGroup = new THREE.Group()\n\n    constructor(scene, themeColor) {\n        this.scene = scene\n        this.themeColor = themeColor\n    }\n\n    Destroy(){\n        if(this.spline !== null){\n            this.scene.remove(this.spline)\n            this.PurgeParam()\n        }\n    }\n\n    clone() {\n        let last_spline = this.spline\n        let c = new SplineLine(this.scene, this.themeColor)\n        let splineMat = new THREE.LineBasicMaterial( { color: last_spline.material.color.clone(), linewidth: 1.2 } );\n        let splineGeo = new THREE.Geometry();\n        splineGeo.vertices = last_spline.geometry.vertices.map(v => v.clone())\n        c.spline = new THREE.Line(splineGeo, splineMat)\n        c.curveTau = this.curveTau\n        c.param = this.param.map((v)=>v.clone())\n        c.curveUpdateDone = this.curveUpdateDone\n        return c\n    }\n\n    KickUpdateCurve() {\n        this.param_need_update = true\n        this.curveTau = this.newCurveTau\n        this.timeGoes = 0\n    }\n    \n    UpdateCurve() {\n        if(this.newCurve === null || this.spline === null) {\n            return\n        }\n\n        ++this.timeGoes;\n        \n        let theme = this.themeColor[MapColorToDiscrete(this.curveTau)]\n        if(this.timeGoes >= this.animateTime) {\n            \n            this.spline.geometry.vertices = this.newCurve\n            this.newCurve = null\n            this.spline.material.color.set(theme)\n            if(this.curveUpdateDone !== null) {\n                this.curveUpdateDone()\n                this.param_need_update = true\n            }\n        }\n        else {\n            let scale = 1 / (this.animateTime - this.timeGoes)\n            this.spline.material.color.lerp(new THREE.Color(theme), scale)\n            \n            for(let i = 0; i < this.newCurve.length; ++i) {\n                let inter = this.newCurve[i].clone().sub( this.spline.geometry.vertices[i])\n                this.spline.geometry.vertices[i].add(inter.multiplyScalar(scale))\n            }\n        }\n        this.spline.geometry.verticesNeedUpdate = true\n    }\n\n\n    Sample(a, tau, gran) {\n        let res = []\n        this.param = []\n        this.newCurveTau = tau\n\n        function at(id) {\n            return a[id].position\n        }\n\n        if(a.length <= 1) {\n            for(let d of a) {\n                res.push(d.position)\n            }\n            this.newCurve = res\n            return this\n        }\n        else if(a.length === 2) {\n            let step = 1.0 / gran\n            res.push(at(0))\n            let first = at(0)\n            let vstep = at(1).clone().sub(first).multiplyScalar(step)\n            let base =  first.clone().add(vstep)\n            for(let j = 1; j < gran-1; ++j) {\n                res.push(base.add(vstep).clone())\n            }\n            res.push(at(1))\n            this.newCurve = res\n            return this\n        }\n\n        let InsertOne = (p1, p2, p3, p4) => {\n            let mat3 = ComputeTransformMatrix(p1, p2, p3, p4)\n            this.param.push(mat3)\n            return mat3\n        }\n\n        function Compute(u, mat) {\n            let u2 = u*u\n            let u3 =u2*u\n            let vec = new THREE.Vector4(u3, u2, u, 1)\n            vec.applyMatrix4(mat)\n            res.push(new THREE.Vector3(vec.x, vec.y, vec.z))\n        }\n\n        let comb = BeginingPrime(tau, at(0), at(1), at(2))\n        let step = 1.0 / gran\n        let u = step\n        res.push(at(0).clone())\n        let mat = InsertOne(at(0), at(1), comb[0], comb[1])\n        for(let j = 1; j < gran-1; ++j) {\n            Compute(u, mat)\n            u += step\n        }\n        \n        let len = a.length - 2\n        for(let i=1; i < len; ++i) {\n            u = step\n            res.push(at(i).clone())\n            let p1 = at(i)\n            let p2 = at(i+1)\n            let p3 = at(i-1).clone().negate().add(p2).multiplyScalar(tau)\n            let p4 = p1.clone().negate().add(at(i+2)).multiplyScalar(tau)\n            let mat = InsertOne(p1, p2, p3, p4)\n            for(let j = 1; j < gran-1; ++j) {\n                Compute(u, mat)\n                u += step\n            }\n        }\n\n        res.push(at(len).clone())\n        comb = BeginingPrime(tau, at(len-1), at(len), at(len+1))\n        u = step\n        comb[0].negate()\n        mat = InsertOne(at(len), at(len+1), comb[1], comb[0])\n        for(let j = 1; j < gran-1; ++j) {\n            Compute(u, mat)\n            u += step\n        }\n        res.push(at(len+1).clone())\n        this.newCurve = res\n        return this\n    }\n\n    Append(dots, numInterp, pointOnPlane) {\n        let scene = this.scene\n        let splineGeo = new THREE.Geometry();\n\n        this.Sample(dots, this.curveTau, numInterp);\n        let splineArr = this.newCurve\n\n        if(this.spline !== null) {\n            if(this.newCurve.length > numInterp) {\n                splineGeo.vertices = this.spline.geometry.vertices\n                let last_vertex = this.spline.geometry.vertices[this.spline.geometry.vertices.length - 1]\n                let step = pointOnPlane.clone().sub(last_vertex).multiplyScalar(1.0/numInterp)\n                let cur = last_vertex.clone().add(step)\n                for(let i = 1; i < numInterp; ++i) {\n                    splineGeo.vertices.push(cur.add(step).clone())\n                }\n                this.KickUpdateCurve()\n            }\n            else {\n                splineGeo.vertices = this.newCurve\n            }\n            scene.remove(this.spline)\n        }\n        else {\n            splineGeo.vertices = splineArr\n        }\n        \n        let spline = new THREE.Line( splineGeo, this.splineMatrial );\n        this.spline = spline\n        scene.add(spline)\n    }\n\n    DisplayNewCurve() {\n        let splineGeo = new THREE.Geometry();\n        splineGeo.vertices = this.newCurve\n        let spline = new THREE.Line( splineGeo, this.splineMatrial );\n        this.scene.remove(this.spline)\n        this.spline = spline\n        this.scene.add(spline)\n    }\n    \n    UpdateParam() {\n        if(this.param_is_displaying) {\n            // this.ShowParam(this.last_sample, )\n        }\n        \n    }\n\n    last_sample = null\n    Paramterize(sample, begin, last, gran) {\n        let param_cache = this.param_cache\n        this.last_sample = sample\n\n        if(this.spline === null || this.spline.geometry.vertices.length < gran) {\n            return\n        }\n    \n        let num = begin\n        let all = 0\n        while(num !== last-1) {\n            param_cache[num] = Integration(this.param[num], 0, 1, 0.01)\n            all += param_cache[num]\n            ++num\n        }\n        param_cache = param_cache.map((h)=>h/all) // normalize\n    \n        let sum = 0\n        let len = (last - begin - 1) * gran\n        let step = 1 / len\n        let cur = step\n        num = begin\n        let res = []\n        while(cur < 1) {\n            let sa = sample(cur)\n            while(sum < sa) {\n                sum += param_cache[num]\n                ++num\n            }\n            \n            let prox = sum - param_cache[num-1]\n            let epsilon = Math.abs(sa - prox)\n            let ua = 0\n            let ub = 1\n            while(epsilon > 0.001) {\n                let s0 = Integration(this.param[num-1], ua, (ua+ub)/2, 0.001) / all\n                if(s0 === 0) {\n                    break\n                }\n                if((prox + s0) > sa) {\n                    ub = (ua+ub)/2\n                }\n                else {\n                    prox += s0\n                    ua = (ua+ub)/2\n                }\n                epsilon = sa - prox\n            }\n    \n            let ua2 = ua * ua\n            let ua3 = ua * ua2\n            let vec = new THREE.Vector4(\n                ua3, ua2, ua, 1\n            )\n            vec.applyMatrix4(this.param[num-1])\n            res.push(new THREE.Vector3(vec.x, vec.y, vec.z))\n            cur += step\n        }\n        return res\n    }\n\n    last_sample_name = 'linear'\n    param_vectors = []\n    PurgeParam() {\n        this.paramDotsGroup.children = []\n        this.param_need_update = true\n        this.scene.remove(this.paramDotsGroup)\n    }\n\n\n    ShowParam(sample_name, begin, last, gran) {\n        if(last - begin < 2) {\n            return\n        }\n\n        // hot reload sampler function, bypass testing\n        if(sample_name !== this.last_sample_name) {\n            this.param_is_displaying = false\n            this.param_need_update = true\n        }\n\n        // already shown\n        if(this.param_is_displaying === true) {\n            return\n        }\n\n        // re-show param line when data hasn't been updated\n        if(this.param_need_update === false) {\n            this.scene.add(this.paramDotsGroup)\n            return\n        }\n\n        this.PurgeParam(); \n        this.param_is_displaying = true\n        this.scene.add(this.paramDotsGroup)\n\n        this.param_need_update = false\n\n        let arr = this.Paramterize(Samplers[sample_name], begin, last, gran)\n        this.param_vectors = arr\n        for(let i of arr) {\n            let pointGeo = new THREE.CircleGeometry( 0.04, 8 );\n            let dotMaterial = new THREE.MeshBasicMaterial( { color: 0xeeeeee } );\n            let dot = new THREE.Mesh( pointGeo, dotMaterial );\n\n            dot.position.set(i.x, i.y, i.z)\n            this.paramDotsGroup.add(dot)\n        }\n        \n    }\n\n    HideParam() {\n        \n        this.scene.remove(this.paramDotsGroup)\n        this.param_is_displaying = false\n    }\n}\n\n\n\nexport class SplineGroup {\n    splines = []\n    canvas = null\n    camera = null\n    planeMesh = null\n\n    mouse_down = false\n\n    geometry = new THREE.BufferGeometry();\n    material = new THREE.LineBasicMaterial( { color: 0xcccccc, linewidth: 2.7 } );\n    positions = new Float32Array( 100 * 3 );\n    drawCount = 0\n    dot_hovered = null\n    line = null\n    click_raycaster = new THREE.Raycaster();\n    hover_raycaster = new THREE.Raycaster();\n    mouse_down = false\n    camera = null\n    canvas = null\n    spline_ctrl_needs_update = false\n    global_tau = 0.5\n    global_gran = 20\n    dotsGroup = new THREE.Group()\n    scene\n    themeColor\n    show_param = false\n    param_sampler_fn = Samplers.linear\n    param_sampler_name = 'linear'\n    listener = null\n    is_handling_drag = false\n    is_bifrost_animating = false\n\n    constructor(scene, canvas, camera, planeMesh, themeColor) {\n        this.scene = scene\n        this.canvas = canvas\n        this.camera = camera\n        this.planeMesh = planeMesh\n        this.themeColor = themeColor\n        this.geometry.setAttribute( 'position', new THREE.BufferAttribute( this.positions, 3 ) );\n        this.line = new THREE.Line( this.geometry,  this.material );\n        this.splines.push(new SplineLine(scene, themeColor))\n\n        scene.add(this.line)\n        scene.add(this.dotsGroup)\n        canvas.onmousemove = (e)=>{this.MouseHoverOrDrag(e)}\n        canvas.onmousedown = ()=> {this.mouse_down = true }\n        canvas.onmouseup = ()=>{this.mouse_down = false; this.UpdateSplineOnDotMoved(); }\n        canvas.onclick = (e)=>{this.HandleClick(e)}\n    }\n    \n    _NotifyListener(msg) {\n        if(this.listener) {\n            this.listener(msg)\n        }\n    }\n\n    MouseHoverOrDrag(event) {\n        this.canvas.setPickPosition(event)\n        let pickPosition = this.canvas.pickPosition\n\n        if(this.dot_hovered && this.mouse_down) {\n            this.HandleDrag()\n            return\n        }\n    \n        this.hover_raycaster.setFromCamera(pickPosition, this.camera);\n        const intersectedObjects = this.hover_raycaster.intersectObjects(this.dotsGroup.children);\n        if(this.dot_hovered !== null) {\n            this.dot_hovered.material.color.setHex( 0xffffff );\n            this.dot_hovered = null\n        }\n        if (intersectedObjects.length) {\n            const obj = intersectedObjects[0].object\n            obj.material.color.setHex( 0xFFF176 );\n            this.dot_hovered = obj\n        }\n        \n    }\n\n    \n\n    HandleDrag() {\n        if (this.is_bifrost_animating) return;\n\n        let dotOnPlane = this.GetMouseOnPlane()\n        this.dot_hovered.position.set(dotOnPlane.x, dotOnPlane.y, dotOnPlane.z)\n        let id = this.dot_hovered.userData.id * 3\n        \n        let arr = this.line.geometry.attributes.position.array \n        arr[id]  = dotOnPlane.x\n        arr[id+1]= dotOnPlane.y\n        arr[id+2]= dotOnPlane.z\n        this.line.geometry.attributes.position.needsUpdate = true\n        this.spline_ctrl_needs_update = true\n        \n    }\n\n    GetMouseOnPlane() {\n        let pickPosition = this.canvas.pickPosition\n        let click_raycaster = this.click_raycaster\n        let point = new THREE.Vector3(pickPosition.x, pickPosition.y, 5);\n        click_raycaster.setFromCamera(point, this.camera);\n        let hits = click_raycaster.intersectObject(this.planeMesh,true);\n        return hits[0].point;\n    }\n\n    UpdateSplineOnDotMoved() {\n        if(!this.spline_ctrl_needs_update) {\n            return\n        }\n\n        this.bifrost = false;\n        this.is_handling_drag = true\n\n        let firstSpline = true\n        \n        for(let spline of this.splines) {\n            if(firstSpline) {\n                firstSpline = false\n                spline.curveUpdateDone = () => {\n                    spline.curveUpdateDone = null\n                    this.is_handling_drag = false;\n                }\n            }\n            spline.Sample(this.dotsGroup.children, this.global_tau, this.global_gran).KickUpdateCurve()\n            \n        }\n\n        this.spline_ctrl_needs_update = false\n    }\n\n    HandleClick(event) {\n        if(this.dot_hovered !== null) {\n            return\n        }\n        \n        this.canvas.setPickPosition(event)\n        let pointOnPlane = this.GetMouseOnPlane()\n\n        let dotsGroup = this.dotsGroup\n        let pointGeo = new THREE.CircleGeometry( 0.06, 12 );\n        let dotMaterial = new THREE.MeshBasicMaterial( { color: 0xffffff } );\n        let dot = new THREE.Mesh( pointGeo, dotMaterial );\n        dot.position.set(pointOnPlane.x, pointOnPlane.y, pointOnPlane.z)\n        dot.userData = { id: dotsGroup.children.length }\n        dotsGroup.add( dot );\n        \n        for(let s of this.splines) {\n            s.Append(this.dotsGroup.children, this.global_gran, pointOnPlane)\n        }\n        if (this.bifrost_save.splines) {\n            for(let s of this.bifrost_save.splines) {\n                s.Append(this.dotsGroup.children, this.global_gran, pointOnPlane)\n            }\n        }\n\n        let positions = this.line.geometry.attributes.position.array;\n        positions[3 * this.drawCount] = pointOnPlane.x\n        positions[3 * this.drawCount + 1] = pointOnPlane.y\n        positions[3 * this.drawCount + 2] = pointOnPlane.z\n        ++this.drawCount;\n        this.line.geometry.setDrawRange(0, this.drawCount)\n        this.line.geometry.attributes.position.needsUpdate = true\n        this._NotifyListener('addDot')\n        this.MouseHoverOrDrag(event)\n    }\n\n    set gran(newGran) {\n        if(this.global_gran === newGran) {\n            return\n        }\n    \n        this.global_gran = newGran\n        for(let s of this.splines) {\n            \n            s.Sample(this.dotsGroup.children, this.global_tau, this.global_gran).DisplayNewCurve()\n        }\n    }\n\n    set tau(newTau) {\n        if(this.global_tau === newTau) {\n            return\n        }\n\n        this.global_tau = newTau\n        for(let s of this.splines) {\n            s.Sample(this.dotsGroup.children, this.global_tau, this.global_gran).KickUpdateCurve()\n        }\n    }\n\n    TestValidSplines() {\n        for(let s of this.splines) {\n            if(s.spline != null) {\n                return true\n            }\n        }\n        return false\n    }\n\n    bifrost_save = {\n        splines: null,\n        global_tau: 0.5\n    }\n\n    set bifrost(bool) {\n        let bifrost_splines = this.bifrost_save.splines\n        let scene = this.scene\n        \n        if((bifrost_splines !== null) === bool || this.TestValidSplines() === false || this.dotsGroup.children.length <= 2) {\n            return\n        }\n    \n        if(bool === false) {\n            for(let i = 0; i < this.splines.length; ++i) {\n                this.scene.remove(this.splines[i].spline)\n            }\n            this.global_tau = this.bifrost_save.global_tau\n            this.splines = this.bifrost_save.splines\n            for(let s of this.splines) {\n                this.scene.add(s.spline)\n            }\n            this.bifrost_save.splines = null\n            return \n        }\n        this.is_bifrost_animating = true\n        this.bifrost_save.splines = this.splines\n        this.bifrost_save.global_tau = this.global_tau\n        let last_spline = this.splines[0]\n\n        for(let s of this.splines) {\n            scene.remove(s.spline)\n        }\n        this.splines = []\n\n        const k = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]\n        \n        let curBifrost = 0\n        \n        last_spline.curveUpdateDone = () => {\n            if(curBifrost === k.length) {\n                last_spline.curveUpdateDone = null\n                this.is_bifrost_animating = false\n                return\n            }\n\n            let last_last_spline = last_spline\n            last_spline = last_spline.clone()\n            last_last_spline.curveUpdateDone = null\n\n            this.scene.add(last_spline.spline)\n            last_spline.Sample(this.dotsGroup.children, k[curBifrost], this.global_gran).KickUpdateCurve()\n            this.splines.push(last_spline)\n            ++curBifrost\n        }\n        last_spline.curveUpdateDone()\n    }\n\n    //image_manager = new ImageManger()\n    set run_img(bool) {\n        //this.image_manager.run_image = bool\n    }\n\n    set img_speed(val) {\n        //this.image_manager.speed = val\n    }\n\n    get imgs() {\n        //return this.image_manager.GetImages()\n        return null\n    }\n\n    set selectImg(b){\n        //this.image_manager.SelectImg(this.scene, b)\n    }\n\n    set showParam(b) {\n        if(this.show_param === b || b === undefined) {\n            return\n        }\n        \n        this.show_param = b\n        if(this.show_param === true) {\n            for(let s of this.splines) {\n                s.ShowParam(this.param_sampler_name, 0, this.dotsGroup.children.length, this.global_gran)\n            }\n        }\n        else {\n            for(let s of this.splines) {\n                s.HideParam()\n            }\n        }\n    }\n\n    set param_sampler(str) {\n        if(str) {\n            this.param_sampler_fn = Samplers[str]\n            this.param_sampler_name = str\n            if(this.show_param) {\n                for(let s of this.splines) {\n                    s.ShowParam(this.param_sampler_name, 0, this.dotsGroup.children.length, this.global_gran)\n                }\n            }\n            \n        }\n    }\n\n    Clear() {\n        //this.image_manager.run_image = false\n        this.bifrost_save.splines = null\n        for(let s of this.splines) {\n            s.Destroy()\n        }\n        this.splines = [\n            new SplineLine(this.scene, this.themeColor)\n        ]\n        \n        let dotsGroup = this.dotsGroup\n        while(dotsGroup.children.length) {\n            dotsGroup.remove(dotsGroup.children[0])\n        }\n\n        \n        this.drawCount = 0\n        this.line.geometry.setDrawRange(0, this.drawCount)\n        this.line.geometry.attributes.position.needsUpdate = true\n    }\n\n    Render() {\n        for(let s of this.splines) {\n            s.UpdateCurve()\n        }\n        let target = null\n        if(this.splines.length && this.splines[0].spline){\n            if(this.show_param === false) {\n                target = this.splines[0].spline.geometry.vertices\n            }\n            else{\n                // eslint-disable-next-line\n                target = this.splines[0].param_vectors\n            }\n        }\n        \n        //this.image_manager.RunImage(this.scene, target, this.global_gran, this.splines[0].curveTau)\n    }\n}\n\n\nexport class CanvasManager {\n    canvas = null\n    w = 0\n    h = 0\n    pickPosition = {\n        x: 0,\n        y: 0\n    }\n    frame = null\n\n    constructor(frame, canvas) {\n        this.clearPickPosition()\n        this.canvas = canvas\n        this.w = frame.clientWidth\n        this.h = frame.clientHeight\n        frame.appendChild(canvas)\n        frame.mouseout = ()=> this.clearPickPosition()\n        this.frame = frame\n    }\n\n    get glContext () {\n        return this.canvas.getContext('gl')\n    }\n    \n    set onmousemove(fn) {\n        this.frame.onmousemove = fn\n    }\n\n    set onmousedown(fn) {\n        this.frame.onmousedown = fn\n    }\n\n    set onmouseup(fn) {\n        this.frame.onmouseup = fn\n    }\n\n    set onclick(fn) {\n        this.frame.onclick = fn\n    }\n\n    onFrameResize() {\n        this.w = this.frame.clientWidth\n        this.h = this.frame.clientHeight\n    }\n\n    Aspect() {\n        return this.w / this.h\n    }\n\n    getCanvasRelativePosition(event) {\n        const rect = this.canvas.getBoundingClientRect();\n        return {\n          x: event.clientX - rect.left,\n          y: event.clientY - rect.top,\n        };\n    }\n\n    setPickPosition(event) {\n        let pickPosition = this.pickPosition\n        const pos = this.getCanvasRelativePosition(event);\n        pickPosition.x = (pos.x / this.w) *  2 - 1;\n        pickPosition.y = (pos.y / this.h) * -2 + 1;  // note we flip Y\n    }\n\n    clearPickPosition() {\n        let pickPosition = this.pickPosition\n        pickPosition.x = -100000;\n        pickPosition.y = -100000;\n    }\n}","import React from 'react';\nimport * as THREE from 'three'\nimport { CanvasManager, SplineGroup, InitContext } from './splineAlgo'\n\nexport default class Render extends React.Component {\n    componentDidMount() {\n        this.handle = RunAll(this.props.colorGroup, this.props.elId)\n        if(this.props.getImg !== undefined){\n            this.props.getImg(this.handle.GetAllImgs())\n            this.handle.SetListener(this.props.listener)\n        }\n        \n    }\n    render() {\n        if(this.handle !== undefined) {\n            this.handle.HandleTau(this.props.tau)\n            this.handle.HandleGran(this.props.gran)\n            this.handle.HandleImg(this.props.theimg)\n            this.handle.HandleImgSpeed(this.props.imgSpeed)\n            if(this.props.bifrost !== undefined) this.handle.EnableBifrost(this.props.bifrost)\n            this.handle.ShowLinearSample(this.props.enable_param)\n            this.handle.SelectImg(this.props.selectImg)\n            this.handle.SelectSampler(this.props.selectSampler)\n            this.handle.SetFlushColor(this.props.flushColor, this.props.flushAlpha)\n            this.handle.SetListener(this.props.listener)\n            if(this.props.cleanup === true) {\n                this.handle.HandleCleanLines()\n                this.props.oncleanupDone()\n            }\n        }\n        return (\n            <div>\n            </div>\n        );\n    }\n}\n\n\nfunction RunAll(themeColor, el_id){\nconst scene = new THREE.Scene();\nconst renderer = new THREE.WebGLRenderer({antialias : true, alpha: true}); //powerPreference:'high-performance'\nrenderer.setPixelRatio(window.devicePixelRatio);\nconst frame = document.getElementById(el_id)\nconst canvas = new CanvasManager(frame, renderer.domElement);\nconst camera = new THREE.PerspectiveCamera(75, canvas.Aspect(), 0.1, 1000);\nconst defaultFlushColor = 0x8ac6d0\nconst defaultFlushAlpha = 0.0\nrenderer.setSize(canvas.w, canvas.h);\nrenderer.setClearColor(defaultFlushColor, defaultFlushAlpha);\n\ncamera.position.z = 5;\n\nInitContext(canvas.glContext)\n\nconst planegeo = new THREE.PlaneGeometry( 1000, 1000, 10, 10 );\nconst planeMesh = new THREE.Mesh(planegeo, new THREE.MeshBasicMaterial());\nconst spline = new SplineGroup(scene, canvas, camera, planeMesh, themeColor)\n\nwindow.addEventListener('resize', ()=>{\n    canvas.onFrameResize()\n    camera.aspect = canvas.Aspect()\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.w, canvas.h)\n}, false)\n\nfunction render() {\n    requestAnimationFrame(render);\n    spline.Render()\n    renderer.render(scene, camera);\n    \n    spline.bifrost = !spline.is_handling_drag\n\n}\nrender();\n\nreturn {\n    HandleTau: (n)=>{spline.tau = n},\n    HandleGran: (n)=>{spline.gran = n },\n    HandleImg: (b)=>{spline.run_img = b},\n    HandleImgSpeed: (n)=>{spline.img_speed = n},\n    EnableBifrost: (b)=>{spline.bifrost = b},\n    HandleCleanLines: ()=>{ spline.Clear() },\n    ShowLinearSample: (b)=>{ spline.showParam = b},\n    GetAllImgs: ()=>{return spline.imgs},\n    SelectImg: (i)=>{spline.selectImg=i},\n    SelectSampler:(i)=>{spline.param_sampler=i},\n    SetFlushColor: (flushColor, flushAlpha)=>{ renderer.setClearColor(flushColor || defaultFlushColor, flushAlpha || defaultFlushAlpha); },\n    SetListener: (listen) => { spline.listener = listen  },\n}\n\n}","import React from 'react';\nimport Render from './spline/splineRender'\nimport { yellow as splineColor} from '@material-ui/core/colors'\n\n\nconst SplineView: React.FC = (props)=>{\n    /*eslint-disable */\n\n    const [spacing, setSpacing] = React.useState(2);\n    const [tau, setTau] = React.useState(0.5)\n    const [gran, setGran] = React.useState(20)\n    const [img, setImg] = React.useState(false)\n    const [imgSpeed, setImgSpeed] = React.useState(1.0)\n    const [disableRest, setDisableRest] = React.useState(false)\n    const [cleanup, setCleanup] = React.useState(false)\n    const [param, setParam] = React.useState(false)\n    const [imgArr, setImgArr] = React.useState([])\n    const [whichImg, setWhichImg] = React.useState(0)\n    const [whichSampler, setWhichSampler] = React.useState('linear')\n    const [hint, setHint] = React.useState('Click in the box')\n    const [nClicks, setNClicks] = React.useState(0)\n    const [colorText, setColorText] = React.useState<any>({\n        color: '#ffffff90',\n        fontSize: '180%'\n    })\n    /*eslint-enable */\n   \n    const resetDone = () => {\n\n    }\n\n    const setImgsArr = () => {\n\n    }\n\n    const listen = (str: string) => {\n        if(str === 'addDot') {\n            if(nClicks <= 4) {\n                setNClicks(nClicks + 1)\n            }\n            else {\n                return;\n            }\n            \n\n            if(nClicks === 0) {\n                setHint('Click somewhere else in the Box')\n                setColorText({\n                    color: 'white',\n                    fontSize: '120%'\n                })\n            }\n\n            if(nClicks === 1) {\n                setHint('Keep clicking somewhere else in the Box')\n                setColorText({\n                    color: 'white',\n                    fontSize: '120%'\n                })\n            }\n\n\n            if(nClicks === 3) {\n                setHint('Try Drag the White Dots')\n                setColorText({\n                    color: 'white',\n                    fontSize: '150%'\n                })\n            }\n\n            if(nClicks === 4) {\n                setHint('')\n            }\n            \n        }\n        \n    }\n\n    return (\n        <div className='aspect-16-9'>\n            <div className='aspect-inner' id=\"canvas-frame-spline\">\n                <div className='spline-click-info' style={colorText}>\n                    {hint}\n                </div>\n            </div>\n            <Render\n                tau={tau} gran={gran} \n                theimg={img} imgSpeed={imgSpeed} \n                colorGroup={splineColor} \n                // bifrost={disableRest} \n                cleanup={cleanup} oncleanupDone={resetDone} \n                elId={\"canvas-frame-spline\"}\n                enable_param={param}\n                getImg={setImgsArr}\n                selectImg={whichImg}\n                selectSampler={whichSampler}\n                listener = {listen}\n                //flushColor={0x001948}\n            >\n            </Render>\n            \n        </div>\n    )\n}\n\nexport default SplineView;","import React from 'react';\n\ninterface PrettyTitleProps {\n    subtitle: string\n    title: string\n    tags?: string[]\n    themeColor: string\n    titleUnderline?: boolean\n    textColor?: string\n    hideLeftRect?: boolean\n    lightBackground?: boolean // is background light? if it is, use black text\n    titleClass?: string\n    prefix?: React.ReactElement\n    rawStyles?: {\n      title?: React.CSSProperties\n    }\n    titleBoxClass?: string\n    leftBoxClass?: string\n  }\n  \n  const PrettyTitle: React.FC<PrettyTitleProps> = (props) => {\n    let titleStyle:React.CSSProperties = {\n      color:'white'\n    }\n    if (props.titleUnderline) {\n      titleStyle.textDecoration = `underline ${props.themeColor}`\n    }\n    if(props.textColor) {\n      titleStyle.color = props.textColor\n    }\n  \n    let subtitleClass = 'project-subtitle'\n    if(props.lightBackground) {\n      subtitleClass += ' project-subtitle-darktext'\n    }\n    const titleClass = props.titleClass || ''\n    const boxStyle:React.CSSProperties = {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n\n    if(props.rawStyles) {\n      if(props.rawStyles.title) {\n        titleStyle = { ...titleStyle, ...props.rawStyles.title }\n      }\n    }\n\n    let titleBoxClass = 'project-titles-box '\n    if(!props.hideLeftRect) {\n      titleBoxClass += 'project-titles-box-title '\n    }\n    if(props.titleBoxClass) {\n      titleBoxClass += props.titleBoxClass\n    }\n\n    let leftBoxClass = 'project-titles-box project-titles-box-highlight '\n    if(props.leftBoxClass) {\n      leftBoxClass += props.leftBoxClass\n    }\n  \n    if (!props.hideLeftRect) {\n      return (\n        <div style={boxStyle}>\n        { props.prefix }\n        <div className='project-titles-box-wrap'>\n          <div className={leftBoxClass} style={{background: props.themeColor}}></div>\n          <div className={titleBoxClass}>\n            <div className={subtitleClass}>{props.subtitle}</div>\n            <h3 className={titleClass} style={titleStyle}>{props.title}</h3>\n          </div>\n        </div>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div style={boxStyle}>\n        { props.prefix }\n        <div className='project-titles-box-wrap'>\n          <div className={titleBoxClass}>\n            <div className={subtitleClass}>{props.subtitle}</div>\n            <h3 className={titleClass} style={titleStyle}>{props.title}</h3>\n          </div>\n        </div>\n        </div>\n      )\n    }\n  }\n\nexport default PrettyTitle;","import React from 'react';\n\ninterface PristineLinksProps {\n    github?: string\n    lightBackground?: boolean\n}\n\nconst PristineLinks: React.FC<PristineLinksProps> = (props)=>{\n    let linkTextClassName = 'project-links '\n    if(props.lightBackground) {\n        linkTextClassName += 'project-links-darktext'\n    }\n\n    return (\n        <div>\n            { props.github ? <a className={linkTextClassName} href={props.github}>Github <br/></a> : null }\n        </div>\n    )\n}\n\n\nexport default PristineLinks","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Link from '@material-ui/core/Link';\nimport {Props as SimpleIconProps, Icon as SimpleIcon} from '@icons-pack/react-simple-icons'\ninterface IntroEntryProps {\n    title: string\n    text?: string\n    centerTitle?: boolean\n    \n  }\n export const IntroEntry : React.FC<IntroEntryProps> = (props) =>{\n    const style : React.CSSProperties = {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyItems: 'center',\n      justifyContent: 'center'\n  \n    }\n    const titleStyle : React.CSSProperties = {\n      display: 'flex',\n      flexDirection: 'column',\n      color: '#00000044',\n      letterSpacing: '0.2em',\n      textAlign: props.centerTitle ? 'center' : undefined,\n      fontSize: '70%'\n    }\n  \n    return (\n        <div style={style}>\n            <p style={titleStyle}>{props.title}</p>\n            <p>{props.text ? props.text : props.children}</p>\n        </div>\n    )\n  }\n  \n  class Vector2 {\n    x: number = 0\n    y: number = 0\n  \n    constructor(_x:number, _y:number) {\n      this.x = _x;\n      this.y = _y;\n    }\n  \n    add(rhs:Vector2) {\n      this.x += rhs.x;\n      this.y += rhs.y;\n      return this;\n    }\n  \n    multiplyScalar(rhs:number) {\n      this.x *= rhs;\n      this.y *= rhs;\n      return this;\n    }\n  \n    sub(rhs: Vector2) {\n      this.x -= rhs.x;\n      this.y -= rhs.y;\n      return this\n    }\n  \n    clone() {\n      return new Vector2(this.x, this.y);\n    }\n  \n    svgfmt() {\n      return `${this.x},${this.y}`\n    }\n  }\n  \n  interface ConcanicalPolygonPathParams {\n    startAngle?: number // in degress\n    startX?: number\n    startY?: number\n  }\n  \n  export const createConcanicalPolygonPath = (n : number, size : number, radius : number, params?: ConcanicalPolygonPathParams) =>{\n    //n = 4\n    //size = 100\n    //radius = 0\n    const deg2rad = (n:number) =>{\n      return n / 180 * Math.PI\n    }\n    const startAngle = deg2rad( params?.startAngle || 0 )\n    const startX = params?.startX  || 0\n    const startY = params?.startY  || 0\n    const center = new Vector2(size/2 + startX, size/2 + startY)\n    const r = size / 2\n    \n    const halfAngleDeg = 90 - 180 / n;\n    //const arcAngleDeg = 180 - 2 * halfAngleDeg;\n    const halfAngle = deg2rad(halfAngleDeg)\n    //const arcAngle = deg2rad(arcAngleDeg)\n  \n    const cut = radius / Math.tan(halfAngle);\n    const len = 2 * r * Math.cos(halfAngle)\n    const cut_percentage = cut / len;\n    //console.log(`cut: ${cut_percentage*100}%`)\n    \n  \n    const vertices = new Array<Vector2>()\n    let path = \"\"\n    for(let i = 0; i < n; ++i) {\n      const angle = startAngle-2 * Math.PI / n  * i\n      const pos = new Vector2(r * Math.cos(angle), r * Math.sin(angle))\n      const vertex = pos.add(center)\n      vertices.push(vertex)\n    }\n  \n    //const lastArcStop = null\n    \n    for(let i = 0; i < n; ++i) {\n      const A = vertices[(i + 0) % n]\n      const B = vertices[(i + 1) % n]\n      //const C = vertices[(i + 2) % n]\n  \n      const AB = A.clone().add(B.clone().sub(A).multiplyScalar(cut_percentage))\n      const BC = A.clone().add(B.clone().sub(A).multiplyScalar(1-cut_percentage))\n      //const BC = B.clone().add(C.clone().sub(B).multiplyScalar(cut_percentage))\n      if (i === 0) {\n        const Q = vertices[(n-1)];\n        const QA = Q.clone().add(A.clone().sub(Q).multiplyScalar(1-cut_percentage))\n        path += `M ${QA.svgfmt()} `\n      }\n      \n      //path += `L ${B.svgfmt()} `\n      path += `A ${radius} ${radius} 0 0 0 ${AB.x} ${AB.y} `\n      path += `L ${BC.svgfmt()} `\n    }\n    return path\n  }\n\n  interface IntroIconProps  extends SimpleIconProps {\n    icon: SimpleIcon,\n    tooltip?: string,\n    link?: string,\n    // autoSize?: boolean\n    // onClick?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\n  }\n  \n  export const IntroIcon : React.FC<IntroIconProps> = (props) =>{\n    const propIcon = {\n      ...props,\n      icon: undefined,\n      message: undefined,\n      link: undefined\n    }\n    let icon = <props.icon {...propIcon} ></props.icon>\n    if(props.link) {\n      icon = (<Link href={props.link}>\n        {icon}\n      </Link>)\n    }\n  \n    if(props.tooltip) {\n      icon =  (\n      <Tooltip title={props.tooltip} aria-label={props.tooltip}>\n        {icon}\n      </Tooltip>)\n    }\n    return (icon)\n  }","import React, { useEffect, useLayoutEffect } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//import Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid'\nimport { Github } from '@icons-pack/react-simple-icons';\nimport { Cplusplus, Javascript, Python, Props as SimpleIconProps, Mathworks, Opengl, Gmail } from '@icons-pack/react-simple-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SplineView from './splineView'\n\nimport PrettyTitle from './bits/pretty_title'\nimport PristineLinks from './bits/pristine_links'\nimport { IntroEntry, IntroIcon, createConcanicalPolygonPath } from './bits/svg_utils'\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('G-BZ4DYFT15X');\nReactGA.pageview(window.location.pathname + window.location.search);\n\n/*\ninterface CardLayoutProps {\n    background: JSX.Element\n    foreground: JSX.Element\n\n    windowWidth: number\n    windowHeight: number\n}\n\n\nconst CardLayout: React.FC<CardLayoutProps> = (props) => {\n  const outerDiv = useRef<HTMLDivElement|null>(null)\n  \n  props.background.setAttribute('width', props.windowWidth.toString())\n  props.foreground.setAttribute('width', props.windowWidth.toString())\n\n  const maxHeight = Math.max(props.background.clientHeight, props.foreground.clientHeight)\n\n  return (\n  <div ref={outerDiv} style={{height: maxHeight}}>\n    {props.background}\n    {props.foreground}\n  </div>\n  )\n}\n*/\n\nfunction App() {\n\n  // const [size, setSize] = useState([0, 0]);\n  //const [projectImageRefs, setProjectImageRefs]  =  useState(new Array<HTMLElement>()) \n  //const [projectContentRefs, setProjectContentRefs] = useState(new Array<HTMLElement>())\n  //const [projectItemRefs, setProjectItemRefs] = useState(new Array<HTMLElement>())\n  const projectImageRefs = new Array<HTMLElement>()\n  const projectContentRefs = new Array<HTMLElement>()\n  const projectItemRefs = new Array<HTMLElement>()\n  const projectContentInner = new Array<HTMLElement>()\n\n  const refProjContentInner = (i: number) => {\n    return (instance: HTMLElement | null) =>{\n      if (!instance ) return;\n      //const r = [...projectImageRefs]\n      projectContentInner[i] = instance\n      //setProjectImageRefs(r)\n    }\n  }\n\n  const refProjIm = (i: number)=>{\n    return (instance: HTMLElement | null) =>{\n      if (!instance ) return;\n      //const r = [...projectImageRefs]\n      projectImageRefs[i] = instance\n      //setProjectImageRefs(r)\n    }\n  }\n\n  const refProjContent = (i: number)=>{\n    return (instance: HTMLElement | null) =>{\n      if (!instance ) return;\n      // const r = [...projectContentRefs]\n      projectContentRefs[i] = instance\n      // setProjectContentRefs(r)\n    }\n  }\n\n  const refProjItem = (i: number)=>{\n    return (instance: HTMLElement | null) =>{\n      if (!instance ) return;\n      // const r = [...projectItemRefs]\n      projectItemRefs[i] = instance\n      // setProjectItemRefs(r)\n    }\n  }\n\n  function updateSize() {\n    //setSize([window.innerWidth, window.innerHeight]);\n    for(let projKey in projectImageRefs) {\n      const im = projectImageRefs[projKey]\n      //const content = projectContentRefs[projKey]\n      const innerContent = projectContentInner[projKey]\n      const hIm = im.clientHeight\n      const hContent = innerContent.clientHeight;\n      const h = Math.max(hIm, hContent)\n      const hItem = Math.max(hIm, hContent + 40)\n      projectItemRefs[projKey].style.height = hItem.toString() + 'px' //.setAttribute('height', h.toString() + 'px')\n      projectContentRefs[projKey].style.height = h.toString() + 'px'\n    }\n  }\n  \n  useEffect(() => {\n    updateSize();\n    window.onload = updateSize;\n    document.title = 'Zhaowei Lin'\n\n    //updateSize();\n    // eslint-disable-next-line\n  }, [])\n  useLayoutEffect(() => {\n    \n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n    // eslint-disable-next-line\n  }, []);\n  \n  const introIconStyle : SimpleIconProps = {\n    size: 24,\n    style: {\n      // marginLeft: 5,\n      marginRight: 10,\n      \n    },\n    \n  }\n  const selfIntroStyle : React.CSSProperties = {\n    paddingLeft: 20,\n    paddingRight: 20\n  }\n  const [gmailEl, setGmailEl] = React.useState<null | SVGElement>(null);\n  const handleGmailClick = (event: React.MouseEvent<SVGElement>) => {\n    setGmailEl(event.currentTarget);\n  };\n  \n\n  const handleGmailClose = (cmd?:string) => {\n    if (cmd) {\n      if (cmd === 'copy') {\n        navigator.clipboard.writeText('leon.linzw@gmail.com')\n      }\n      else if(cmd === 'mail') {\n        window.open('mailto:leon.linzw@gmail.com');\n      }\n    }\n    \n    setGmailEl(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <link href=\"https://fonts.googleapis.com/css?family=Nunito+Sans:300,400,700\" rel=\"stylesheet\"></link>\n      <Grid container style={selfIntroStyle} alignItems='flex-start'>\n        <div className=\"vertical-space-2\"></div>\n        <Grid item xs={12} md={4}>\n          <Grid container>\n            <Grid item xs={12}>\n              <div className=\"avatar-center-align\">\n                <div className=\"avatar-circle\" style={{position: 'relative'}}>\n                  <svg viewBox='0, 0 240 240' width=\"240\" height=\"240\" style={{position: 'absolute', top: -10, left: -10}}>\n                    <path d={createConcanicalPolygonPath(16, 240, 15, { startAngle: 30})} fill=\"#e5f290da\"/>\n                  </svg>\n\n                  <svg viewBox='0, 0 230 230' width=\"230\" height=\"230\" style={{position: 'absolute', top: -6, left: -6}}>\n                    <path d={createConcanicalPolygonPath(10, 230, 15, { startAngle: 30})} fill=\"#eef7bb\"/>\n                  </svg>\n\n                  <svg viewBox='0, 0 220 220' width=\"220\" height=\"220\" style={{position: 'absolute', top: 0, left: 0}}>\n                    <path d={createConcanicalPolygonPath(6, 220, 15, { startAngle: 15})} fill=\"#f8fce3\"/>\n                  </svg>\n                  \n                  <svg viewBox='0 0 200 200' width=\"200\" height=\"200\" style={{position: 'relative'}}>\n                    <defs>\n                      <pattern id=\"avatar\" patternUnits=\"userSpaceOnUse\" width=\"200\" height=\"200\">\n                      {/* <image href='static/img/me.jpg' x=\"-110\" y=\"-80\" width=\"400\" height=\"400\"/> */}\n                      <image href='static/img/me-removebg-preview-sqr.svg' width=\"200\" height=\"200\"/>\n                      </pattern>\n                    </defs>\n                    <path d={createConcanicalPolygonPath(6, 200, 15)} fill=\"url(#avatar)\"/>\n                  </svg>\n                  {/* </div> */}\n                </div>\n              </div>\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Grid container>\n                <Grid item xs={12} sm={5} md={12} lg={5}> \n                  <div className=\"vertical-space-2\"></div>\n                  <IntroEntry title='Contacts'>\n                    <IntroIcon icon={Github} color=\"#181717\" {...introIconStyle} tooltip=\"Github\" link=\"https://github.com/linwe2012\"/>\n                    <IntroIcon  aria-controls=\"menu-gmail\" aria-haspopup=\"true\" icon={Gmail} color=\"#D14836\" onClick={handleGmailClick} {...{...introIconStyle, ...{style:{cursor:'pointer'}}}} tooltip=\"Gmail\"/>\n                    <Menu\n                      id=\"menu-gmail\"\n                      anchorEl={gmailEl}\n                      keepMounted\n                      open={Boolean(gmailEl)}\n                      onClose={()=>{handleGmailClose()}}\n                    >\n                      <p className='gmail-text'>leon.linzw@gmail.com</p>\n                      <MenuItem onClick={()=>{handleGmailClose('copy')}}>Copy Address</MenuItem>\n                      <MenuItem onClick={()=>{handleGmailClose('mail')}}>Send Mail</MenuItem>\n                    </Menu>\n                  </IntroEntry>\n                </Grid>\n                <Grid item xs={12} sm={7} md={12} lg={7}>\n                  <div className=\"vertical-space-2\"></div>\n                  <IntroEntry title='Proficiency'>\n                    <IntroIcon icon={Cplusplus} color=\"#00599C\" {...introIconStyle} tooltip=\"C/C++\"/>\n                    <IntroIcon icon={Python} color=\"#3776AB\" {...introIconStyle} tooltip=\"Python\"/>\n                    <IntroIcon icon={Javascript} color=\"#F7DF1E\" {...introIconStyle} tooltip=\"Javascript/Typescript\"/>\n                    <IntroIcon icon={Mathworks} color=\"#0076A8\" {...introIconStyle} tooltip=\"Matlab\"/>\n                    <IntroIcon icon={Opengl} color=\"#5586A48\" {...introIconStyle} tooltip=\"OpenGL\"/>\n                  </IntroEntry>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      \n      <Grid item xs={12} md={8}>\n        <div className=\"vertical-space-2\"></div>\n        <h1 style = {{margin: 0}}>Zhaowei Lin</h1>\n        <h3 style = {{ marginBottom: 10 }}>Student, Programmer in Hangzhou</h3>\n\n        <p>\n          I'm a senior colledge student. I love to create cool stuffs. \n\n          I currently intern at Bytedance, working to improve the sdk that empowers Tiktok, Spicy, Douyin and much more.\n        </p>\n        <div className=\"vertical-space-3\"></div>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={6}> <IntroEntry title='Education' text='Zhejiang Unviersity'></IntroEntry> </Grid>\n          <Grid item xs={6}> <IntroEntry title='Major' text='Digital Media Tech (Dept. of CS)'></IntroEntry> </Grid>\n        </Grid>\n      </Grid>\n\n      \n      </Grid>\n\n\n      <div>\n        <h2 className='project-start-title'>Projects</h2>\n        <div className='vertical-space-2'></div>\n        <div className='project-item' style={{background: 'black'}} ref={refProjItem(0)}>\n          <img onLoad={updateSize} alt='photomonatage' className='project-bg' style={{bottom: 0}} src=\"static/img/photomontage-crunch.png\" ref={refProjIm(0)}/>\n          <div className='project-content project-cover-dark-gradient-tl' ref={refProjContent(0)}>\n          <div ref={refProjContentInner(0)}>\n            \n            <PrettyTitle\n              subtitle = 'ZJU | Computational Photography | C++ | OpenCV'\n              title = 'Interactive Digital Photomontage' titleUnderline\n              themeColor = '#00fddb'\n            ></PrettyTitle>\n            \n            \n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-text project-lefttext\">Users can paint on images to indicate the best part of each image. The algorithm first uses graph-cut to extend user's brushes into regions. Then it uses Gradient Domain Fusion to make it seamless.</p>\n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-subtext project-lefttext\">[Background Image] How gradient-domain fusion gradually recover the image from all 0s.</p>\n            <a className='project-links' href=\"https://grail.cs.washington.edu/projects/photomontage/photomontage.pdf\"> Paper <br/></a>\n            <a className='project-links' href=\"https://github.com/linwe2012/CourseComputationalPhotography\">Github <br/></a>\n            <a className='project-links' href=\"https://github.com/linwe2012/CourseComputationalPhotography\">Demo Video <br/></a>\n            <div className=\"vertical-space-7\"></div>\n          </div>\n          </div>\n        </div>\n\n        \n        <div className='project-item' style={{backgroundColor: '#222020'}} ref={refProjItem(1)}>\n          <img onLoad={updateSize} alt='schroedinger smoke' className='project-bg' style={{bottom: 0}} src=\"static/img/schroedinger_smoke.png\" ref={refProjIm(1)}/>\n          <div className='project-content' ref={refProjContent(1)}>\n          <div ref={refProjContentInner(1)}>\n            <div className='project-subtitle'>ZJU | Advances in Computer Graphics | C# | Compute Shader</div>\n            <h3 style={{color:'white'}}>Schrödinger's Smoke <span className=\"project-tagtext\">Siggraph 16</span></h3>\n\n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-text project-lefttext\">\n            I implements the paper in Unity and accelerate it with Computer Shader, which runs faster than original paper. </p>\n            <p className=\"project-text project-lefttext\">Schrödinger's Equation in Quantum Mechanics can be used to describe superfluids, whose dynamics is similar to that of smoke. The paper leverages Schrödinger's Equation to calculate vortex and generates the velocity field from the wave function.\n            </p>\n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-subtext project-lefttext\">[Background Image] Simulate 256<sup>3</sup> Grids and present results with over 100,000,000 particles.</p>\n            <a className='project-links' href=\"http://page.math.tu-berlin.de/~chern/projects/SchrodingersSmoke/\"> Paper <br/></a>\n            <a className='project-links' href=\"https://github.com/linwe2012/ShroedingerSmoke\">Github <br/></a>\n            <div className=\"vertical-space-7\"></div>\n          </div>\n          </div>\n        </div>\n\n        <div className='project-item gradient-spline'>\n          <div className='project-content' style={{position: 'relative'}}>\n          <PrettyTitle\n              subtitle = 'ZJU | Computer Animations | Typescript | WebGL'\n              title = 'Splines, FFD, FuzzyWarp'\n              themeColor = '#4776f8'\n            ></PrettyTitle>\n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-text\">\n              All three projects are written in typescript and you can play with it online.\n            </p>\n            <p>\n              <span className=\"project-text project-text-white\"> Spline: </span> <span> &nbsp;</span>\n              <a className='project-links' href=\"https://github.com/linwe2012/Spline\">Github</a> <span> </span>\n              <a className='project-links' href=\"https://linwe2012.github.io/Spline/\"> Play Online Demo </a>\n            </p>\n            <p>\n              <span className=\"project-text project-text-white\"> Free Form Deformation: </span> <span> &nbsp;</span>\n              <a className='project-links' href=\"https://github.com/linwe2012/FreeFormDeformation\">Github</a> <span> </span>\n              <a className='project-links' href=\"https://linwe2012.github.io/FreeFormDeformation/\"> Play Online Demo </a>\n            </p>\n            <p>\n              <span className=\"project-text project-text-white\"> Fuzzy Warp: </span> <span> &nbsp;</span>\n              <a className='project-links' href=\"https://github.com/linwe2012/FuzzyWarp\">Github</a> <span> </span>\n              <a className='project-links' href=\"https://linwe2012.github.io/FuzzyWarp/\"> Play Online Demo </a>\n            </p>\n            <div className=\"vertical-space-1\"></div>\n            <SplineView></SplineView>\n          </div>\n        </div>\n        \n        <div className='project-item' style={{backgroundColor: '#88b8ca' }} ref={refProjItem(2)}>\n          <img onLoad={updateSize} alt='schroedinger smoke' className='project-bg' style={{bottom: -45}} src=\"static/img/animal_party-crunch.png\" ref={refProjIm(2)}/>\n          <div className='project-content' ref={refProjContent(2)}>\n          <div ref={refProjContentInner(2)}>\n            <div className='project-subtitle'>ZJU | Game Design | C# | Joycon</div>\n            <h3 style={{color:'white'}}>Animal Party</h3>\n\n            <div className=\"vertical-space-3\"></div>\n            <div className='project-lefttext' style={{backgroundColor: '#00000085', marginLeft: -40, paddingLeft: 40, paddingTop: 20, paddingRight: 20, paddingBottom: 20}}>\n              <div style={{position:'absolute', right: 0, top: -12, width: '60%', height: 20, background:'#ff3c28', lineHeight:'17px', color:'white'}}><span style={{fontWeight:800, marginLeft: '5px'}}>&ndash;</span></div>\n              <div style={{position:'absolute', left: 0, bottom: -12, width: '60%', height: 20, background:'#0ab9e5', lineHeight:'17px', color:'white', textAlign: 'right'}}><span style={{fontWeight:800, marginRight: '10px'}}>+</span></div>\n              <div className=\"vertical-space-1\"></div>\n              <p className=\"project-text  project-text-white\">\n              I led my team made this game where Joycon &amp; body movements are used to play. The game is about taking care of animals. You can feed and pet animals in the game.  \n\n              </p>\n              <p className=\"project-text  project-text-white\">\n                There are five missions and a tutorial in the game.\n              </p>\n\n              <div className=\"vertical-space-1\"></div>\n              <p className=\"project-subtext\">[Background Image] The intro scene.</p>\n              \n              <a className='project-links' href=\"https://github.com/linwe2012/AnimalParty\">Github <br/></a>\n              <a className='project-links' href=\"https://youtu.be/5kacuvv1os8\"> Demo Video <br/></a>\n              <div className=\"vertical-space-1\"></div>\n            </div>\n            <div className=\"vertical-space-5\"></div>\n          </div>\n          </div>\n        </div>\n        <div className='project-item' style={{backgroundColor: '#1f282d' }} ref={refProjItem(4)}>\n          <img onLoad={updateSize} alt='schroedinger smoke' className='project-bg' style={{bottom: -45}} src=\"static/img/wordgame-render-2-comp.png\" ref={refProjIm(4)}/>\n          <div className='project-content' ref={refProjContent(4)}>\n          <div ref={refProjContentInner(4)}>\n            <div className='project-subtitle'>ZJU | Tech &amp; Innovations | C++ | Sifteo Cubes </div>\n            <h3 style={{color:'white'}}>Fight against Alzheimer's disease with Sifteo Cubes</h3>\n\n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text  project-text-white project-text-shadow\">\n              My team surveyed possible ways to fight against Alzheimer's disease (AD). Sound &amp; light stimulations will be helpful according our research.\n              </p>\n              <p className=\"project-text project-text-white project-text-shadow\">\n              We want something like legos but more versatile, and then comes Sifteo Cube. We attached a flashing butt to the cube to enable light simulations.\n              </p>\n              <p className=\"project-text project-text-white project-text-shadow\">\n              I wrote two games, the dyer game where players mix dyers of different colors to obtain designated color, and the word jigsaw puzzle game\n              </p>\n\n              <div className=\"vertical-space-1\"></div>\n              <p className=\"project-subtext\">[Background Image] A rendering of the cubes.</p>\n              \n              <a className='project-links' href=\"https://github.com/linwe2012/SifteoGames\">Github <br/></a>\n            </div>\n            <div className=\"vertical-space-5\"></div>\n          </div>\n          </div>\n        </div>\n\n        <div className=\"vertical-space-3\"></div>\n        <div className=\"vertical-space-3\"></div>\n        <div className='project-item'>\n          <div className='project-content-text'>\n            <PrettyTitle\n              subtitle = 'ZJU | Computer Graphics | C++ | OpenGL'\n              title = 'Render Engine'\n              themeColor = '#fc5c7d'\n              titleBoxClass = 'project-title-nabla'\n              leftBoxClass = 'project-leftbox-nabla'\n            ></PrettyTitle>\n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text project-text-darktext\">\n                It supports Physically Based Rendering, deferred lights. With the help of ImGUI, it allows for editing lights, loading models and modifying textures.\n              </p>\n              <p className=\"project-text project-text-darktext\">\n                It adopts Entity Component System (ECS) architecture. In the engine, an entity if a number used for indexing components.\n              </p>\n              <p className=\"project-text project-text-darktext\">\n                Hashmaps tailored for sparse &amp; dense components are implemented.\n              </p>\n              <PristineLinks \n                github = \"https://github.com/linwe2012/nabla\"\n                lightBackground\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className='project-item' style={{marginTop: '45px'}}>\n          <div className='project-content-text'>\n            <PrettyTitle\n              subtitle = 'ZJU | Database | C++'\n              title = 'Mini SQL Engine'\n              themeColor = '#105858'\n              textColor = 'black'\n              titleClass = 'underline--stars'\n              hideLeftRect lightBackground\n            ></PrettyTitle>\n            \n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text project-text-darktext\">\n                It supports insert, delete and search. All data are stored in a paged file. \n              </p>\n\n              <PristineLinks \n                github = \"https://github.com/linwe2012/miniSQL\"\n                lightBackground\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"vertical-space-3\"></div>\n        <div className='project-item'>\n          <div className='project-content-text'>\n            <PrettyTitle\n              subtitle = 'ZJU | Compilers | C | LLVM'\n              title = 'C Compiler written in C' titleUnderline\n              themeColor = '#991100'\n              textColor = 'black'\n              hideLeftRect lightBackground\n            ></PrettyTitle>\n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text project-text-darktext\">\n                Input files are tokenized by Flex, then feed to Yacc for a LALR parsing. During Yacc's parsing, an Abstract Syntax Tree (AST) is generated. \n                AST is scanned to do type checking and to generate targe code with the help of LLVM.\n              </p>\n              <PristineLinks \n                github = \"https://github.com/linwe2012/compiler\"\n                lightBackground\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"vertical-space-3\"></div>\n        <div className='project-item'>\n          <div className='project-content-text'>\n            <PrettyTitle\n              subtitle = 'ZJU | Image Processing | C/C++ '\n              title = 'Image Processing Library'\n              themeColor = 'linear-gradient(90deg, rgba(4,248,249,1) 0%, rgba(143,254,102,1) 100%)'\n              textColor = 'black'\n              lightBackground\n            ></PrettyTitle>\n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text project-text-darktext\">\n              It allows read/write images. It also supports HDR, histogram equalization, Otsu thresholding, color space transformation, bilateral filter, etc.\n              </p>\n\n              <PristineLinks \n                github = \"https://github.com/linwe2012/ImageConvert\"\n                lightBackground\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"vertical-space-3\"></div>\n        <div className='project-item'>\n          <div className='project-content-text'>\n            <PrettyTitle\n              subtitle = 'ZJU | Networks | C/C++ '\n              title = 'Simple HTTP Server'\n              themeColor = '#989081'\n              textColor = 'black'\n              hideLeftRect lightBackground\n            ></PrettyTitle>\n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text project-text-darktext\">\n                A simple HTTP Server that provides Node.js like APIs.\n              </p>\n\n              <PristineLinks \n                github = \"https://github.com/linwe2012/HTTPServer\"\n                lightBackground\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"vertical-space-3\"></div>\n        <div className='project-item'>\n          <div className='project-content-text'>\n            <PrettyTitle\n              subtitle = 'NESA Lab | Formal Verification | Tamarin Prover | VS Code '\n              title = 'Tamarin Prover VS Code Language Plugin'\n              themeColor = '#989081'\n              textColor = 'black'\n              hideLeftRect lightBackground\n            ></PrettyTitle>\n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text project-text-darktext\">\n                Tamarin prover is a formal verification tool. It only provides syntax highlighting &amp; snippets for vim, sublime. I bring that to VS Code as it is free and more commonly used.\n              </p>\n\n              <PristineLinks \n                github = \"https://github.com/linwe2012/tamarin\"\n                lightBackground\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"vertical-space-3\"></div>\n        <div className='project-item'>\n          <div className='project-content-text'>\n            <PrettyTitle\n              subtitle = 'ZJU | Object Oriented Programming | C++'\n              title = 'Script Interpreter for Text-base Games'\n              themeColor = '#989081'\n              textColor = 'black'\n              hideLeftRect lightBackground\n            ></PrettyTitle>\n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text project-text-darktext\">\n              I made up a scripting language that assimilates Javascript. It is tailored for text-based games. It parses the script and builds an AST. Then it just interpreting the script by walking through AST. It's worth noting that it provides a quite powerful string formatter.\n              </p>\n\n              <p className=\"project-text project-text-darktext\">\n              It is assumed that text-game would have different rooms connected to each other. The author must first sketch the topology of the room in the script. Then the author sets triggers for user input or NPC.\n              </p>\n\n              <PristineLinks \n                github = \"https://github.com/linwe2012/CrappyScriptEngine\"\n                lightBackground\n              />\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"vertical-space-3\"></div>\n        <div className='project-item'>\n          <div className='project-content-text'>\n            <PrettyTitle\n              subtitle = 'ZJU | Assembly | Intel i386 (16bits asm)'\n              title = 'Assembly: Read file, Calculator &amp; Keyboard Reader'\n              themeColor = '#989081'\n              textColor = 'black'\n              hideLeftRect lightBackground\n            ></PrettyTitle>\n            <div className=\"vertical-space-1\"></div>\n            <div className='project-lefttext'>\n              <p className=\"project-text project-text-darktext\">\n                Those are 16bits assembly code.\n              </p>\n              <p className=\"project-text project-text-darktext\">\n              The file reader will open up a file, displaying both raw Hex and ASCII. It supports moving up/down, and page up/down, and jump to beginning or end. Most importantly, it was only 253 lines of assembly code.\n              </p>\n\n              <p className=\"project-text project-text-darktext\">\n                The calcuator does as sound. It only accept a simple expression with one binary operator.\n              </p>\n\n              <PristineLinks \n                github = \"https://github.com/linwe2012/AssemblyLearning\"\n                lightBackground\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"vertical-space-3\"></div>\n        <a href=\"https://info.flagcounter.com/a8vl\"><img src=\"https://s01.flagcounter.com/count2/a8vl/bg_FFFFFF/txt_000000/border_CCCCCC/columns_2/maxflags_10/viewers_0/labels_0/pageviews_0/flags_0/percent_0/\" alt=\"Flag Counter\" /></a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}