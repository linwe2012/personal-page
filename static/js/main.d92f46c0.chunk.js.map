{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["IntroEntry","props","titleStyle","display","flexDirection","color","letterSpacing","textAlign","centerTitle","undefined","fontSize","style","justifyItems","justifyContent","title","text","children","Vector2","_x","_y","x","y","this","rhs","createConcanicalPolygonPath","n","size","radius","params","deg2rad","Math","PI","startAngle","startX","startY","center","r","halfAngle","cut_percentage","tan","cos","console","log","vertices","Array","path","i","angle","vertex","sin","add","push","A","B","AB","clone","sub","multiplyScalar","BC","Q","QA","svgfmt","IntroIcon","propIcon","icon","message","link","Link","href","tooltip","Tooltip","aria-label","App","introIconStyle","marginRight","React","useState","gmailEl","setGmailEl","handleGmailClose","cmd","navigator","clipboard","writeText","window","open","className","rel","Grid","container","paddingLeft","paddingRight","alignItems","item","xs","md","position","viewBox","width","height","top","left","d","fill","id","patternUnits","sm","lg","Github","aria-controls","aria-haspopup","Gmail","onClick","event","currentTarget","cursor","Menu","anchorEl","keepMounted","Boolean","onClose","MenuItem","Cplusplus","Python","Javascript","Mathworks","Opengl","justify","margin","marginBottom","alt","bottom","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d92f46c0.chunk.js","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//import Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { Github } from '@icons-pack/react-simple-icons';\nimport { Cplusplus, Javascript, Python, Props as SimpleIconProps, Mathworks, Icon as SimpleIcon, Opengl, Gmail } from '@icons-pack/react-simple-icons';\nimport Link from '@material-ui/core/Link';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\ninterface IntroEntryProps {\n  title: string\n  text?: string\n  centerTitle?: boolean\n  \n}\nconst IntroEntry : React.FC<IntroEntryProps> = (props) =>{\n  const style : React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyItems: 'center',\n    justifyContent: 'center'\n\n  }\n  const titleStyle : React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#00000044',\n    letterSpacing: '0.2em',\n    textAlign: props.centerTitle ? 'center' : undefined,\n    fontSize: '70%'\n  }\n\n  return (\n      <div style={style}>\n          <p style={titleStyle}>{props.title}</p>\n          <p>{props.text ? props.text : props.children}</p>\n      </div>\n  )\n}\n\ninterface IntroIconProps  extends SimpleIconProps {\n  icon: SimpleIcon,\n  tooltip?: string,\n  link?: string,\n  // onClick?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\n}\nclass Vector2 {\n  x: number = 0\n  y: number = 0\n\n  constructor(_x:number, _y:number) {\n    this.x = _x;\n    this.y = _y;\n  }\n\n  add(rhs:Vector2) {\n    this.x += rhs.x;\n    this.y += rhs.y;\n    return this;\n  }\n\n  multiplyScalar(rhs:number) {\n    this.x *= rhs;\n    this.y *= rhs;\n    return this;\n  }\n\n  sub(rhs: Vector2) {\n    this.x -= rhs.x;\n    this.y -= rhs.y;\n    return this\n  }\n\n  clone() {\n    return new Vector2(this.x, this.y);\n  }\n\n  svgfmt() {\n    return `${this.x},${this.y}`\n  }\n}\n\ninterface ConcanicalPolygonPathParams {\n  startAngle?: number // in degress\n  startX?: number\n  startY?: number\n}\n\nconst createConcanicalPolygonPath = (n : number, size : number, radius : number, params?: ConcanicalPolygonPathParams) =>{\n  //n = 4\n  //size = 100\n  //radius = 0\n  const deg2rad = (n:number) =>{\n    return n / 180 * Math.PI\n  }\n  const startAngle = deg2rad( params?.startAngle || 0 )\n  const startX = params?.startX  || 0\n  const startY = params?.startY  || 0\n  const center = new Vector2(size/2 + startX, size/2 + startY)\n  const r = size / 2\n  \n  const halfAngleDeg = 90 - 180 / n;\n  //const arcAngleDeg = 180 - 2 * halfAngleDeg;\n  const halfAngle = deg2rad(halfAngleDeg)\n  //const arcAngle = deg2rad(arcAngleDeg)\n\n  const cut = radius / Math.tan(halfAngle);\n  const len = 2 * r * Math.cos(halfAngle)\n  const cut_percentage = cut / len;\n  console.log(`cut: ${cut_percentage*100}%`)\n  \n\n  const vertices = new Array<Vector2>()\n  let path = \"\"\n  for(let i = 0; i < n; ++i) {\n    const angle = startAngle-2 * Math.PI / n  * i\n    const pos = new Vector2(r * Math.cos(angle), r * Math.sin(angle))\n    const vertex = pos.add(center)\n    vertices.push(vertex)\n  }\n\n  //const lastArcStop = null\n  \n  for(let i = 0; i < n; ++i) {\n    const A = vertices[(i + 0) % n]\n    const B = vertices[(i + 1) % n]\n    //const C = vertices[(i + 2) % n]\n\n    const AB = A.clone().add(B.clone().sub(A).multiplyScalar(cut_percentage))\n    const BC = A.clone().add(B.clone().sub(A).multiplyScalar(1-cut_percentage))\n    //const BC = B.clone().add(C.clone().sub(B).multiplyScalar(cut_percentage))\n    if (i === 0) {\n      const Q = vertices[(n-1)];\n      const QA = Q.clone().add(A.clone().sub(Q).multiplyScalar(1-cut_percentage))\n      path += `M ${QA.svgfmt()} `\n    }\n    \n    //path += `L ${B.svgfmt()} `\n    path += `A ${radius} ${radius} 0 0 0 ${AB.x} ${AB.y} `\n    path += `L ${BC.svgfmt()} `\n  }\n  return path\n}\n\nconst IntroIcon : React.FC<IntroIconProps> = (props) =>{\n  const propIcon = {\n    ...props,\n    icon: undefined,\n    message: undefined,\n    link: undefined,\n    \n  }\n  let icon = <props.icon {...propIcon} ></props.icon>\n  if(props.link) {\n    icon = (<Link href={props.link}>\n      {icon}\n    </Link>)\n  }\n\n  if(props.tooltip) {\n    icon =  (\n    <Tooltip title={props.tooltip} aria-label={props.tooltip}>\n      {icon}\n    </Tooltip>)\n  }\n  return (icon)\n}\n\nfunction App() {\n\n\n  const introIconStyle : SimpleIconProps = {\n    size: 24,\n    style: {\n      // marginLeft: 5,\n      marginRight: 10,\n      \n    },\n    \n  }\n  const selfIntroStyle : React.CSSProperties = {\n    paddingLeft: 20,\n    paddingRight: 20\n  }\n  const [gmailEl, setGmailEl] = React.useState<null | SVGElement>(null);\n  const handleGmailClick = (event: React.MouseEvent<SVGElement>) => {\n    setGmailEl(event.currentTarget);\n  };\n  \n\n  const handleGmailClose = (cmd?:string) => {\n    if (cmd) {\n      if (cmd === 'copy') {\n        navigator.clipboard.writeText('leon.linzw@gmail.com')\n      }\n      else if(cmd === 'mail') {\n        window.open('mailto:leon.linzw@gmail.com');\n      }\n    }\n    \n    setGmailEl(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <link href=\"https://fonts.googleapis.com/css?family=Nunito+Sans:300,400,700\" rel=\"stylesheet\"></link>\n      {/*<svg viewBox='0 0 120 100' width=\"200\" height=\"200\">\n        <defs>\n          <pattern id=\"img1\" patternUnits=\"userSpaceOnUse\" width=\"100\" height=\"100\">\n          <image href='static/img/me.jpg' x=\"-10\" y=\"0\" width=\"200\" height=\"200\"/>\n          </pattern>\n        </defs>\n        <path d='M38,2 \n                L82,2 \n                A12,12 0 0,1 94,10 \n                L112,44 \n                A12,12 0 0,1 112,56\n                L94,90       \n                A12,12 0 0,1 82,98\n                L38,98\n                A12,12 0 0,1 26,90\n                L8,56\n                A12,12 0 0,1 8,44\n                L26,10\n                A12,12 0 0,1 38,2' fill=\"url(#img1)\"/>\n  </svg>*/}\n\n      \n\n      <Grid container style={selfIntroStyle} alignItems='flex-start'>\n        <div className=\"vertical-space-2\"></div>\n        <Grid item xs={12} md={4}>\n          <Grid container>\n            <Grid item xs={12}>\n              <div className=\"avatar-center-align\">\n                <div className=\"avatar-circle\" style={{position: 'relative'}}>\n                  {/* <div className=\"avatar-wrapper\"> */}\n                  { /* <img alt='leon' className='avatar-img' src='static/img/me.jpg'></img> */ }\n                  <svg viewBox='0, 0 240 240' width=\"240\" height=\"240\" style={{position: 'absolute', top: -10, left: -10}}>\n                    <path d={createConcanicalPolygonPath(16, 240, 15, { startAngle: 30})} fill=\"#e5f290da\"/>\n                  </svg>\n\n                  <svg viewBox='0, 0 230 230' width=\"230\" height=\"230\" style={{position: 'absolute', top: -6, left: -6}}>\n                    <path d={createConcanicalPolygonPath(10, 230, 15, { startAngle: 30})} fill=\"#eef7bb\"/>\n                  </svg>\n\n                  <svg viewBox='0, 0 220 220' width=\"220\" height=\"220\" style={{position: 'absolute', top: 0, left: 0}}>\n                    <path d={createConcanicalPolygonPath(6, 220, 15, { startAngle: 15})} fill=\"#f8fce3\"/>\n                  </svg>\n                  \n                  <svg viewBox='0 0 200 200' width=\"200\" height=\"200\" style={{position: 'relative'}}>\n                    <defs>\n                      <pattern id=\"avatar\" patternUnits=\"userSpaceOnUse\" width=\"200\" height=\"200\">\n                      <image href='static/img/me.jpg' x=\"-110\" y=\"-80\" width=\"400\" height=\"400\"/>\n                      </pattern>\n                    </defs>\n                    <path d={createConcanicalPolygonPath(6, 200, 15)} fill=\"url(#avatar)\"/>\n                  </svg>\n                  {/* </div> */}\n                </div>\n              </div>\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Grid container>\n                <Grid item xs={12} sm={5} md={12} lg={5}> \n                  <div className=\"vertical-space-2\"></div>\n                  <IntroEntry title='Contacts'>\n                    <IntroIcon icon={Github} color=\"#181717\" {...introIconStyle} tooltip=\"Github\" link=\"https://github.com/linwe2012\"/>\n                    <IntroIcon  aria-controls=\"menu-gmail\" aria-haspopup=\"true\" icon={Gmail} color=\"#D14836\" onClick={handleGmailClick} {...{...introIconStyle, ...{style:{cursor:'pointer'}}}} tooltip=\"Gmail\"/>\n                    <Menu\n                      id=\"menu-gmail\"\n                      anchorEl={gmailEl}\n                      keepMounted\n                      open={Boolean(gmailEl)}\n                      onClose={()=>{handleGmailClose()}}\n                    >\n                      <p className='gmail-text'>leon.linzw@gmail.com</p>\n                      <MenuItem onClick={()=>{handleGmailClose('copy')}}>Copy Address</MenuItem>\n                      <MenuItem onClick={()=>{handleGmailClose('mail')}}>Send Mail</MenuItem>\n                    </Menu>\n                  </IntroEntry>\n                </Grid>\n                <Grid item xs={12} sm={7} md={12} lg={7}>\n                  <div className=\"vertical-space-2\"></div>\n                  <IntroEntry title='Proficiency'>\n                    <IntroIcon icon={Cplusplus} color=\"#00599C\" {...introIconStyle} tooltip=\"C/C++\"/>\n                    <IntroIcon icon={Python} color=\"#3776AB\" {...introIconStyle} tooltip=\"Python\"/>\n                    <IntroIcon icon={Javascript} color=\"#F7DF1E\" {...introIconStyle} tooltip=\"Javascript/Typescript\"/>\n                    <IntroIcon icon={Mathworks} color=\"#0076A8\" {...introIconStyle} tooltip=\"Matlab\"/>\n                    <IntroIcon icon={Opengl} color=\"#5586A48\" {...introIconStyle} tooltip=\"OpenGL\"/>\n                  </IntroEntry>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      \n      <Grid item xs={12} md={8} justify=\"center\" alignItems=\"center\" >\n        <div className=\"vertical-space-2\"></div>\n        <h1 style = {{margin: 0}}>Zhaowei Lin</h1>\n        <h3 style = {{ marginBottom: 10 }}>Student, Programmer in Hangzhou</h3>\n\n        <p>\n          I'm a senior colledge student. I love to create cool stuffs. \n\n          I currently intern at Bytedance, working to improve the sdk that empowers Tiktok, Spicy, Douyin and much more.\n        </p>\n        <div className=\"vertical-space-3\"></div>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={6}> <IntroEntry title='Education' text='Zhejiang Unviersity'></IntroEntry> </Grid>\n          <Grid item xs={6}> <IntroEntry title='Major' text='Digital Media Tech (Dept. of CS)'></IntroEntry> </Grid>\n        </Grid>\n      </Grid>\n\n      \n      </Grid>\n\n\n      <div>\n        <h2 className='project-start-title'>Projects</h2>\n        <div className='vertical-space-2'></div>\n        <div className='project-item'>\n          <img alt='photomonatage' className='project-bg' style={{bottom: -45}} src=\"static/img/photomontage.png\" />\n          <div className='project-content'>\n            <div className='project-subtitle'>ZJU | Computational Photography | C++ | OpenCV</div>\n            <h3 style={{color:'white'}}>Interactive Digital Photomontage</h3>\n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-text project-lefttext\">User can paint on images to indicate best part of each image. The algorithm first uses graphcut to extend user's brushes into regions. Then it use Gradient Domain Fushion to make it seamless</p>\n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-subtext project-lefttext\">The background image demonstrates how gradient domain fushion gradually recover image from all 0s.</p>\n            <a className='project-links' href=\"https://grail.cs.washington.edu/projects/photomontage/photomontage.pdf\"> Paper <br/></a>\n            <a className='project-links' href=\"https://github.com/linwe2012/CourseComputationalPhotography\">Github <br/></a>\n            <a className='project-links' href=\"https://github.com/linwe2012/CourseComputationalPhotography\">Demo Video <br/></a>\n          </div>\n        </div>\n\n        <div className='project-item'>\n          \n          <img alt='photomonatage' className='project-bg' style={{bottom: -45}} src=\"static/img/photomontage.png\" />\n          <div className='project-content'>\n            <div className='project-subtitle'>ZJU | Advances in Computer Graphics | C# | Compute Shader</div>\n            <h3 style={{color:'white'}}>Schrödinger's Smoke <span className=\"project-tagtext\">Siggraph 16</span></h3>\n\n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-text project-lefttext\">User can paint on images to indicate best part of each image. The algorithm first uses graphcut to extend user's brushes into regions. Then it use Gradient Domain Fushion to make it seamless</p>\n            <div className=\"vertical-space-1\"></div>\n            <p className=\"project-subtext project-lefttext\">The background image demonstrates how gradient domain fushion gradually recover image from all 0s.</p>\n            <a className='project-links' href=\"https://grail.cs.washington.edu/projects/photomontage/photomontage.pdf\"> Paper <br/></a>\n            <a className='project-links' href=\"https://github.com/linwe2012/CourseComputationalPhotography\">Github <br/></a>\n            <a className='project-links' href=\"https://github.com/linwe2012/CourseComputationalPhotography\">Demo Video <br/></a>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}